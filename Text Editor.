import java.awt.*;
import javax.swing.*;
import java.io.*;
import java.awt.*;
import javax.swing.*;
import java.io.*;
import java.awt.event.*;
import javax.swing.plaf.metal.*;
import javax.swing.text.*;
public class TextEditor extends JFrame implements ActionListener {
    //By Siddhi Girish Malwadkar.
    JTextArea textArea;
    JFrame frame;
    TextEditor(){
        frame=new JFrame("Text Editor");
        try{
            UIManager.setLookAndFeel("javax.swing.plaf.metal.MetalLookAndFeel");
            MetalLookAndFeel.setCurrentTheme(new OceanTheme());
        }catch(Exception e){

        }
        textArea=new JTextArea();
        JMenuBar menubar=new JMenuBar();
        JMenu menu=new JMenu("File");
        JMenuItem jMenuItem1=new JMenuItem("New");
        JMenuItem jMenuItem2=new JMenuItem("Open");
        JMenuItem jMenuItem3=new JMenuItem("Save");
        JMenuItem jMenuItem9=new JMenuItem("Print");

        jMenuItem1.addActionListener(this);
        jMenuItem2.addActionListener(this);
        jMenuItem3.addActionListener(this);
        jMenuItem9.addActionListener(this);

        menu.add(jMenuItem1);
        menu.add(jMenuItem2);
        menu.add(jMenuItem3);
        menu.add(jMenuItem9);

        JMenu menu1=new JMenu("Edit");

        JMenuItem jMenuItem4=new JMenuItem("cut");
        JMenuItem jMenuItem5=new JMenuItem("copy");
        JMenuItem jMenuItem6=new JMenuItem("paste");

        jMenuItem4.addActionListener(this);
        jMenuItem5.addActionListener(this);
        jMenuItem6.addActionListener(this);

        menu1.add(jMenuItem4);
        menu1.add(jMenuItem5);
        menu1.add(jMenuItem6);

        JMenuItem jmitem=new JMenuItem("close");
        jmitem.addActionListener(this);

        menubar.add(menu);
        menubar.add(menu1);
        menubar.add(jmitem);

        frame.setJMenuBar(menubar);
        frame.add(textArea);
        frame.setSize(500, 500);
        frame.show();
    }
    public void actionPerformed(ActionEvent e){
        String s=e.getActionCommand();
        if(s.equals("cut")){
            textArea.cut();
        }
        else if(s.equals("copy")){
            textArea.copy();
        }
        else if(s.equals("paste")){
            textArea.paste();
        }
        else if(s.equals("Save")){
            JFileChooser jFileChooser=new JFileChooser("f:");
            int r=jFileChooser.showSaveDialog(null);
            if(r==JFileChooser.APPROVE_OPTION){
                File file=new File(jFileChooser.getSelectedFile().getAbsolutePath());
                try{
                    FileWriter fileWriter=new FileWriter(file, false);
                    BufferedWriter bufferedWriter=new BufferedWriter(fileWriter);
                    bufferedWriter.write(textArea.getText());
                    bufferedWriter.flush();
                    bufferedWriter.close();
                }catch(Exception exception){
                    JOptionPane.showMessageDialog(frame,exception.getMessage());
                }

            }
            else 
            JOptionPane.showMessageDialog(frame,"the user has cancelled the operation");

        }else if(s.equals("Print")){
            try{
                textArea.print();
            }
            catch(Exception exception){
                JOptionPane.showMessageDialog(frame,exception.getMessage());
            }
        }
        else if(s.equals("Open")){
            JFileChooser jFileChooser=new JFileChooser("f:");
            int r=jFileChooser.showOpenDialog(null);
            if(r==JFileChooser.APPROVE_OPTION){
                File file=new File(jFileChooser.getSelectedFile().getAbsolutePath());
                try{
                    String s1="",sl="";
                    FileReader fileReader=new FileReader(file);
                    BufferedReader bufferedReader=new BufferedReader(fileReader);
                    sl=bufferedReader.readLine();
                    while ((s1 = bufferedReader.readLine()) != null) {
                        sl=sl+"\n"+s1;
                    }
                    textArea.setText(sl);
                }catch(Exception exception){
                    JOptionPane.showMessageDialog(frame,exception.getMessage());

                }
                
                }else{
                    JOptionPane.showMessageDialog(frame,"the user has cancelled the operation");
            }
            
            }else if(s.equals("New")){
                textArea.setText("");
        }else if(s.equals("close")){
            frame.setVisible(false);
        }
    }



    }
    

